[{"path":[]},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/filesFormat.html","id":"usagi-default-columns","dir":"Articles","previous_headings":"Usagi file format","what":"Usagi default columns","title":"Tables description and rules","text":"One row per sourceCode + conceptId combination.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/filesFormat.html","id":"usagi-extended-columns","dir":"Articles","previous_headings":"Usagi file format","what":"Usagi extended columns","title":"Tables description and rules","text":"Usagi file considered C&CR file following columns: ADD_INFO:sourceConceptId, ADD_INFO:sourceConceptClass ADD_INFO:sourceDomain. pair ADD_INFO:sourceValidStartDate ADD_INFO:sourceValidEndDate optional. included, respective columns CONCEPT table set default values, 1900-01-01 2099-12-31. pair ADD_INFO:sourceParents ADD_INFO:sourceParentVocabulary optional. included, use populate CONCEPT_RELATIONSHIP table ‘’ ‘Subsumes’ relationships. ADD_INFO:validationMessages column added validateUsagiFile contains messages validation checks.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/filesFormat.html","id":"vocabularies-csv-file-format","dir":"Articles","previous_headings":"","what":"vocabularies.csv file format","title":"Tables description and rules","text":"vocabularies.csv file used describe vocabularies processed. csv file following columns:","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/filesFormat.html","id":"source_to_concept_map_extended-table-format","dir":"Articles","previous_headings":"","what":"SOURCE_TO_CONCEPT_MAP_EXTENDED table format","title":"Tables description and rules","text":"SOURCE_TO_CONCEPT_MAP_EXTENDED extension SOURCE_TO_CONCEPT_MAP table, see CDM. used store source concept map extended information. SOURCE_TO_CONCEPT_MAP_EXTENDED table following columns:","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workAsGithubRepo.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Running the complete mapping process","text":"runAll function provides streamlined way execute complete mapping process: 1. Validates Usagi files vocabulary folder 2. Creates populates SOURCE_TO_CONCEPT_MAP_EXTENDED table 3. Creates CDM vocabulary tables mappings 4. Validates resulting CDM tables using DataQualityDashboard","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithMultipleMappingFiles.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"Step by step example using individual functions","text":"vignette shows use functions ROMOPMappingTools package work multiple Usagi mapping files. Validating format, updating vocabulary update, uploading STCM table, transforming STCM table CDM tables. automating process github repository, please refer Work github repository vignette. working single Usagi file, please refer Work individual mapping files vignette. Example files included package. inst/testdata folder can find files used example.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithMultipleMappingFiles.html","id":"setting-up-the-forders-structure","dir":"Articles","previous_headings":"Intro","what":"Setting up the forders structure","title":"Step by step example using individual functions","text":"work multiple Usagi files, need folder Usagi files vocabularies.csv file. vocabularies.csv file file contains vocabulary information path Usagi NEWS.md files asociated vocabulary, see Tables description rules vignette details. recommend folder structure like one use example: use root folder containing vocabularies.csv subdirectories named vocabulary id. subdirectory contains Usagi NEWS.md files. case two vocabularies: ICD10fi UNITfi.","code":"inst/testdata/VOCABULARIES/ ├── vocabularies.csv ├── ICD10fi/ │   ├── ICD10fi.usagi.csv │   └── NEWS.md └── UNITfi/     ├── UNITfi.usagi.csv     └── NEWS.md"},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithMultipleMappingFiles.html","id":"target-database","dir":"Articles","previous_headings":"Intro","what":"Target database","title":"Step by step example using individual functions","text":"example use test database DuckDB format included package. Create new database making copy inst/testdata/OMOPVocabulary.duckdb file.","code":"pathToOMOPVocabularyDuckDBfile <- helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB()  connectionDetails <- DatabaseConnector::createConnectionDetails(   dbms = \"duckdb\",   server = pathToOMOPVocabularyDuckDBfile )  connection <- DatabaseConnector::connect(connectionDetails) #> Connecting using DuckDB driver #> Warning in connectDuckdb(connectionDetails): The ICU extension of DuckDB is not #> installed. Attempting to install it. #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.31 secs vocabularyDatabaseSchema <- \"main\""},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithMultipleMappingFiles.html","id":"validate-all-the-usagi-files-in-the-vocabulary-folder","dir":"Articles","previous_headings":"Intro","what":"Validate all the Usagi files in the vocabulary folder","title":"Step by step example using individual functions","text":"function nees input path folder vocabularies.csv file, connection database, schema vocabulary tables folder store validated Usagi files valid. function validate format vocabularies.csv file Usagi files. Details Usagi file validations described Work individual mapping files vignette. function return tibble validations vocabularies.csv file Usagi files.","code":"pathToVocabularyFolder <- system.file(\"testdata/VOCABULARIES\", package = \"ROMOPMappingTools\") pathToValidatedUsagiFolder <- tempdir()  validationsLogTibble <- validateVocabularyFolder(   pathToVocabularyFolder,   connection,   vocabularyDatabaseSchema,   pathToValidatedUsagiFolder ) #> Validating Usagi file ./ICD10fi/ICD10fi.usagi.csv #> Validating Usagi file ./UNITfi/UNITfi.usagi.csv knitr::kable(validationsLogTibble)"},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithMultipleMappingFiles.html","id":"upload-all-the-usagi-files-to-the-stcm-table","dir":"Articles","previous_headings":"Intro","what":"Upload all the Usagi files to the STCM table","title":"Step by step example using individual functions","text":"validations pass, can use vocabularyFolderToSTCMAndVocabularyTables function upload Usagi files STCM table. validations fail, recoment fix errors following Work individual mapping files vignette. using Usagi-extended format, also need create source_to_concept_map_extended table, see Files format vignette details. vocabularyFolderToSTCMVocabularyConcepClassTables needs path vocabulary folder, connection database, schema vocabulary tables name SourceToConceptMap table. function populate VOCABULARY table vocabularies.csv file source_to_concept_map_extended table Usagi-extended files. can see botton ICD10fi UNITfi vocabularies added VOCABULARY table. can see source_to_concept_map_extended table populated Usagi-extended files.","code":"sourceToConceptMapTable <- \"source_to_concept_map_extended\" createSourceToConceptMapExtended(connection, vocabularyDatabaseSchema, sourceToConceptMapTable) #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.00975 secs vocabularyFolderToSTCMVocabularyConcepClassTables(   pathToVocabularyFolder,   connection,   vocabularyDatabaseSchema,   sourceToConceptMapTable ) #> Appending vocabularies.csv to VOCABULARY table #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.00671 secs #> Inserting data took 0.0129 secs #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.00585 secs #> Inserting data took 0.0341 secs #> Appending info from Usagi files to Concept Class table #>  #> Collecting concept classes from Usagi file ./ICD10fi/ICD10fi.usagi.csv #>  #> Collecting concept classes from Usagi file ./UNITfi/UNITfi.usagi.csv #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.00706 secs #> Inserting data took 0.0143 secs #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.00556 secs #> Inserting data took 0.0142 secs #> Appending Usagi files to STCM table #>  #> Appending Usagi file ./ICD10fi/ICD10fi.usagi.csv #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.00378 secs #> Inserting data took 0.0154 secs #> Appending Usagi file ./UNITfi/UNITfi.usagi.csv #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.00391 secs #> Inserting data took 0.012 secs dplyr::tbl(connection, \"VOCABULARY\") |>   dplyr::collect() #> # A tibble: 15 × 5 #>    vocabulary_id    vocabulary_name      vocabulary_reference vocabulary_version #>    <chr>            <chr>                <chr>                <chr>              #>  1 Domain           OMOP Domain          \"OMOP generated\"     NA                 #>  2 Vocabulary       OMOP Vocabulary      \"OMOP generated\"     NA                 #>  3 Concept Class    OMOP Concept Class   \"OMOP generated\"     NA                 #>  4 Relationship     OMOP Relationship    \"OMOP generated\"     NA                 #>  5 OMOP Extension   OMOP Extension (OHD… \"OMOP generated\"     OMOP Extension 20… #>  6 Nebraska Lexicon Nebraska Lexicon (U… \"https://www.unmc.e… Nebraska Lexicon … #>  7 ICDO3            International Class… \"https://seer.cance… ICDO3 SEER Site/H… #>  8 ICD10            International Class… \"http://www.who.int… 2021 Release       #>  9 LOINC            Logical Observation… \"http://loinc.org/d… LOINC 2.77         #> 10 Cancer Modifier  Diagnostic Modifier… \"OMOP generated\"     Cancer Modifier 2… #> 11 SNOMED           Systematic Nomencla… \"http://www.nlm.nih… 2024-02-01 SNOMED… #> 12 None             OMOP Standardized V… \"OMOP generated\"     v5.0 30-AUG-24     #> 13 UCUM             Unified Code for Un… \"http://aurora.rege… Version 1.8.2      #> 14 ICD10fi          International Class… \"\"                   v1.1.2             #> 15 UNITfi           Finnish Units vocab… \"\"                   v1.0.1             #> # ℹ 1 more variable: vocabulary_concept_id <int> dplyr::tbl(connection, \"source_to_concept_map_extended\") |>   dplyr::collect() #> # A tibble: 4,122 × 12 #>    source_code source_concept_id source_vocabulary_id source_code_description    #>    <chr>                   <int> <chr>                <chr>                      #>  1 A01.0+G01          2000500101 ICD10fi              Meningitis (in) typhoid f… #>  2 A01.0+I39.8        2000500102 ICD10fi              Endocarditis in typhoid f… #>  3 A01.0+J17.0        2000500103 ICD10fi              Typhoid fever pneumonia    #>  4 A01.4+M01.3        2000500104 ICD10fi              Arthritis in typhoid or p… #>  5 A02.2+G01          2000500105 ICD10fi              Salmonella meningitis      #>  6 A02.2+H22.0        2000500106 ICD10fi              Salmonella iridocyclitis   #>  7 A02.2+H22.0        2000500106 ICD10fi              Salmonella iridocyclitis   #>  8 A02.2+J17.0        2000500107 ICD10fi              Salmonella pneumonia       #>  9 A02.2+M01.3        2000500108 ICD10fi              Salmonella arthritis       #> 10 A02.2+M90.2        2000500109 ICD10fi              Salmonella osteomyelitis   #> # ℹ 4,112 more rows #> # ℹ 8 more variables: target_concept_id <int>, target_vocabulary_id <chr>, #> #   valid_start_date <date>, valid_end_date <date>, invalid_reason <chr>, #> #   source_concept_class <chr>, source_domain <chr>, #> #   source_parents_concept_ids <chr>"},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithMultipleMappingFiles.html","id":"copying-the-stcm-table-to-the-cdm-tables","dir":"Articles","previous_headings":"Intro","what":"Copying the STCM table to the CDM tables","title":"Step by step example using individual functions","text":"STCM table can copied CDM tables using STCMToCDM function. function needs connection database schema vocabulary tables stored, schema vocabulary tables name SourceToConceptMap table. function solely call SQL code inst/sql/STCMToCDM.sql file, hence also used outside package. SQL code can translated database supported DatabaseConnector, applied directly. populates CONCEPT table: CONCEPT_RELATIONSHIP table ‘Maps ’ relationships: ‘Maps ’ relationships: columns sourceConceptCode sourceConceptVocabularyId present STCM table, used populate CONCEPT_RELATIONSHIP table ‘’ relationships: Subsumes relationships:","code":"STCMToCDMTables(connection, vocabularyDatabaseSchema, sourceToConceptMapTable) #>   |                                                                              |                                                                      |   0%  |                                                                              |============                                                          |  17%  |                                                                              |=======================                                               |  33%  |                                                                              |===================================                                   |  50%  |                                                                              |===============================================                       |  67%  |                                                                              |==========================================================            |  83%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.0593 secs dplyr::tbl(connection, \"CONCEPT\") |>   dplyr::filter(vocabulary_id == \"ICD10fi\") |>   dplyr::collect() #> Note: method with signature 'DBIConnection#SQL' chosen for function 'dbQuoteIdentifier', #>  target signature 'DatabaseConnectorDbiConnection#SQL'. #>  \"DatabaseConnectorConnection#character\" would also be valid #> # A tibble: 3,505 × 10 #>    concept_id concept_name              domain_id vocabulary_id concept_class_id #>         <int> <chr>                     <chr>     <chr>         <chr>            #>  1 2000500101 Meningitis (in) typhoid … Condition ICD10fi       ICD10fi Hierarc… #>  2 2000500102 Endocarditis in typhoid … Condition ICD10fi       ICD10fi Hierarc… #>  3 2000500103 Typhoid fever pneumonia   Condition ICD10fi       ICD10fi Hierarc… #>  4 2000500104 Arthritis in typhoid or … Condition ICD10fi       ICD10fi Hierarc… #>  5 2000500105 Salmonella meningitis     Condition ICD10fi       ICD10fi Hierarc… #>  6 2000500106 Salmonella iridocyclitis  Condition ICD10fi       ICD10fi Hierarc… #>  7 2000500107 Salmonella pneumonia      Condition ICD10fi       ICD10fi Hierarc… #>  8 2000500108 Salmonella arthritis      Condition ICD10fi       ICD10fi Hierarc… #>  9 2000500109 Salmonella osteomyelitis  Condition ICD10fi       ICD10fi Hierarc… #> 10 2000500110 Salmonella renal tubulo-… Conditio… ICD10fi       ICD10fi Hierarc… #> # ℹ 3,495 more rows #> # ℹ 5 more variables: standard_concept <chr>, concept_code <chr>, #> #   valid_start_date <date>, valid_end_date <date>, invalid_reason <chr> dplyr::tbl(connection, \"CONCEPT_RELATIONSHIP\") |>   dplyr::filter(relationship_id == \"Maps to\") |>   dplyr::filter(concept_id_1 > 2000500101) |>   dplyr::collect() #> # A tibble: 4,089 × 6 #>    concept_id_1 concept_id_2 relationship_id valid_start_date valid_end_date #>           <int>        <int> <chr>           <date>           <date>         #>  1   2000500102      4111401 Maps to         1900-01-01       2099-12-31     #>  2   2000500105       437772 Maps to         1900-01-01       2099-12-31     #>  3   2000500106       133685 Maps to         1900-01-01       2099-12-31     #>  4   2000500109       134264 Maps to         1900-01-01       2099-12-31     #>  5   2000500110      4329572 Maps to         1900-01-01       2099-12-31     #>  6   2000500114      4173717 Maps to         1900-01-01       2099-12-31     #>  7   2000500118      4130374 Maps to         1900-01-01       2099-12-31     #>  8   2000500119      4174262 Maps to         1900-01-01       2099-12-31     #>  9   2000500120       376337 Maps to         1900-01-01       2099-12-31     #> 10   2000500121       441776 Maps to         1900-01-01       2099-12-31     #> # ℹ 4,079 more rows #> # ℹ 1 more variable: invalid_reason <chr> dplyr::tbl(connection, \"CONCEPT_RELATIONSHIP\") |>   dplyr::filter(relationship_id == \"Mapped from\") |>   dplyr::filter(concept_id_2 > 2000500101) |>   dplyr::collect() #> # A tibble: 4,089 × 6 #>    concept_id_1 concept_id_2 relationship_id valid_start_date valid_end_date #>           <int>        <int> <chr>           <date>           <date>         #>  1      4111401   2000500102 Mapped from     1900-01-01       2099-12-31     #>  2      4166072   2000500103 Mapped from     1900-01-01       2099-12-31     #>  3        80316   2000500108 Mapped from     1900-01-01       2099-12-31     #>  4      4329572   2000500110 Mapped from     1900-01-01       2099-12-31     #>  5       440937   2000500116 Mapped from     1900-01-01       2099-12-31     #>  6      4150516   2000500117 Mapped from     1900-01-01       2099-12-31     #>  7      4098475   2000500122 Mapped from     1900-01-01       2099-12-31     #>  8        81496   2000500123 Mapped from     1900-01-01       2099-12-31     #>  9     36713392   2000500133 Mapped from     1900-01-01       2099-12-31     #> 10       194268   2000500134 Mapped from     1900-01-01       2099-12-31     #> # ℹ 4,079 more rows #> # ℹ 1 more variable: invalid_reason <chr> dplyr::tbl(connection, \"CONCEPT_RELATIONSHIP\") |>   dplyr::filter(relationship_id == \"Is a\") |>   dplyr::filter(concept_id_1 > 2000500101) |>   dplyr::collect() #> # A tibble: 5,353 × 6 #>    concept_id_1 concept_id_2 relationship_id valid_start_date valid_end_date #>           <int>        <int> <chr>           <date>           <date>         #>  1   2000502016     45576549 Is a            1900-01-01       2099-12-31     #>  2   2000502019     45576549 Is a            1997-06-18       2099-12-31     #>  3   2000502020     45538072 Is a            1900-01-01       2099-12-31     #>  4   2000502021     45538072 Is a            1900-01-01       2099-12-31     #>  5   2000502024     45595913 Is a            1997-06-18       2099-12-31     #>  6   2000502025     45595913 Is a            1997-06-18       2099-12-31     #>  7   2000502026     45533121 Is a            1997-06-18       2099-12-31     #>  8   2000502030     45576558 Is a            1997-06-18       2099-12-31     #>  9   2000502031     45576558 Is a            1997-06-18       2099-12-31     #> 10   2000502034     45586252 Is a            1997-06-18       2099-12-31     #> # ℹ 5,343 more rows #> # ℹ 1 more variable: invalid_reason <chr> dplyr::tbl(connection, \"CONCEPT_RELATIONSHIP\") |>   dplyr::filter(relationship_id == \"Subsumes\") |>   dplyr::filter(concept_id_1 > 2000500101) |>   dplyr::collect() #> # A tibble: 21 × 6 #>    concept_id_1 concept_id_2 relationship_id valid_start_date valid_end_date #>           <int>        <int> <chr>           <date>           <date>         #>  1   2000503725   2000503728 Subsumes        1997-08-24       2099-12-31     #>  2   2000503769   2000503739 Subsumes        1900-01-01       2099-12-31     #>  3   2000503769   2000503742 Subsumes        1900-01-01       2099-12-31     #>  4   2000503769   2000503755 Subsumes        1900-01-01       2099-12-31     #>  5   2000503768   2000503725 Subsumes        1900-01-01       2099-12-31     #>  6   2000503725   2000503731 Subsumes        1997-10-06       2099-12-31     #>  7   2000503769   2000503741 Subsumes        1900-01-01       2099-12-31     #>  8   2000503769   2000503747 Subsumes        1900-01-01       2099-12-31     #>  9   2000503769   2000503750 Subsumes        1900-01-01       2099-12-31     #> 10   2000500469   2000500471 Subsumes        1900-01-01       2099-12-31     #> # ℹ 11 more rows #> # ℹ 1 more variable: invalid_reason <chr>"},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithMultipleMappingFiles.html","id":"populating-the-concept_ancestor-table","dir":"Articles","previous_headings":"Intro","what":"Populating the CONCEPT_ANCESTOR table","title":"Step by step example using individual functions","text":"Since added “” “Subsumes” relationships CONCEPT_RELATIONSHIP table, can use information populate CONCEPT_ANCESTOR table. done conceptRelationshipToAncestorTables function. can applied non-standard vocabulary, ones included vocabularies.csv file. Close connection database.","code":"conceptRelationshipToAncestorTables(   connection,   vocabularyDatabaseSchema,   vocabularyList = c(\"ICD10\", \"ICD10fi\", \"UNITfi\") ) #>   |                                                                              |                                                                      |   0%  |                                                                              |==============                                                        |  20%  |                                                                              |============================                                          |  40%  |                                                                              |==========================================                            |  60%  |                                                                              |========================================================              |  80%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.0565 secs DatabaseConnector::disconnect(connection)"},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithMultipleMappingFiles.html","id":"validate-the-new-cdm-tables-with-dataqualitydashboard","dir":"Articles","previous_headings":"Intro","what":"Validate the new CDM tables with DataQualityDashboard","title":"Step by step example using individual functions","text":"Since introduced changes OMOP CDM table, can use DataQualityDashboard package validate havent introduced errors. include function validateCDMtablesWithDQD package facilitate task. can see errors.","code":"# Create connectionDetails from the existing connection validationResultsFolder <- tempdir()  validationLogR6 <- validateCDMtablesWithDQD(connectionDetails, vocabularyDatabaseSchema, validationResultsFolder) #> Connecting using DuckDB driver #> Connecting using DuckDB driver #> Currently in a tryCatch or withCallingHandlers block, so unable to add global calling handlers. ParallelLogger will not capture R messages, errors, and warnings, only explicit calls to ParallelLogger. (This message will not be shown again this R session) #>  #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   checkLevel = col_character(), #>   checkName = col_character(), #>   checkDescription = col_character(), #>   kahnContext = col_character(), #>   kahnCategory = col_character(), #>   kahnSubcategory = col_character(), #>   sqlFile = col_character(), #>   evaluationFilter = col_character(), #>   severity = col_character() #> ) #> CDM Tables skipped: CARE_SITE, CDM_SOURCE, COHORT, COHORT_DEFINITION, CONDITION_ERA, CONDITION_OCCURRENCE, COST, DEATH, DEVICE_EXPOSURE, DOSE_ERA, DQDASHBOARD_RESULTS, DRUG_ERA, DRUG_EXPOSURE, EPISODE, EPISODE_EVENT, FACT_RELATIONSHIP, LOCATION, MAIN.DQDASHBOARD_RESULTS, MEASUREMENT, METADATA, NOTE, NOTE_NLP, OBSERVATION, OBSERVATION_PERIOD, PAYER_PLAN_PERIOD, PERSON, PROCEDURE_OCCURRENCE, PROVIDER, SOURCE_TO_CONCEPT_MAP, SOURCE_TO_CONCEPT_MAP_EXTENDED, SPECIMEN, VISIT_DETAIL, VISIT_OCCURRENCE #> Warning in DataQualityDashboard::executeDqChecks(connectionDetails = #> connectionDetails, : DEPRECATION WARNING - The plausibleDuringLife check has #> been reimplemented with the plausibleBeforeDeath check. #> Warning in DataQualityDashboard::executeDqChecks(connectionDetails = #> connectionDetails, : DEPRECATION WARNING - The plausibleTemporalAfter check has #> been reimplemented with the plausibleAfterBirth and plausibleStartBeforeEnd #> checks. #> Warning in DataQualityDashboard::executeDqChecks(connectionDetails = #> connectionDetails, : DEPRECATION WARNING - The plausibleGender check has been #> reimplemented with the plausibleGenderUseDescendants check. #> Connecting using DuckDB driver #> Processing check description: cdmTable #> Processing check description: measurePersonCompleteness #> Processing check description: measureConditionEraCompleteness #> Processing check description: measureObservationPeriodOverlap #> Processing check description: cdmField #> Processing check description: isRequired #> Processing check description: cdmDatatype #> Processing check description: isPrimaryKey #> Processing check description: isForeignKey #> Processing check description: fkDomain #> Processing check description: fkClass #> Processing check description: isStandardValidConcept #> Processing check description: measureValueCompleteness #> Processing check description: standardConceptRecordCompleteness #> Processing check description: sourceConceptRecordCompleteness #> Processing check description: sourceValueCompleteness #> Processing check description: plausibleValueLow #> Processing check description: plausibleValueHigh #> Processing check description: plausibleTemporalAfter #> Processing check description: plausibleDuringLife #> Processing check description: withinVisitDates #> Processing check description: plausibleAfterBirth #> Processing check description: plausibleBeforeDeath #> Processing check description: plausibleStartBeforeEnd #> Processing check description: plausibleGender #> Processing check description: plausibleGenderUseDescendants #> Processing check description: plausibleUnitConceptIds #> Writing results to file: /tmp/RtmpKLnUnc/tmp_vocab_table-20250930183028.json #> Execution Complete #> Connecting using DuckDB driver #> Writing results to table main.dqdashboard_results #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> Executing SQL took 0.00672 secs #> Warning in value[[3L]](cond): Writing table failed: Invalid Error: Conversion Error: Could not convert string 'Table CONCEPT_SYNONYM is empty.' to INT32 when casting from source column not_applicable_reason #> ℹ Context: rapi_execute #> ℹ Error type: INVALID #> ℹ Raw message: Conversion Error: Could not convert string 'Table CONCEPT_SYNONYM is empty.' to INT32 when casting from source column not_applicable_reason knitr::kable(validationLogR6) validationLogR6 |>   dplyr::filter(type == \"ERROR\") |>   knitr::kable()"},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithOneMappingFile.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"Working with individual mapping files","text":"vignette shows use functions ROMOPMappingTools package work single Usagi mapping file. Reading Usagi file, validating format, updating vocabulary update. trasforming single usagi file C&CR tables OMOP vocabulary, recommend follow steps Work multiple mapping files vignette. process need information included Usagi file, n ‘vocabularies.csv’ file. automating process github repository, please refer Work github repository vignette. Example files included package. inst/testdata folder can find files used example.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithOneMappingFile.html","id":"reading-a-usagi-file","dir":"Articles","previous_headings":"Intro","what":"Reading a Usagi file","title":"Working with individual mapping files","text":"reading Usagi file, can use readUsagiFile function, returns tibble correct columns formated. can read standard Usagi file extended Usagi file, see Usagi file format vignette details. example read extended Usagi file, test data. file contains mappings ICD10fi vocabulary.","code":"pathToUsagiFile <- system.file(\"testdata/VOCABULARIES/ICD10fi/ICD10fi.usagi.csv\", package = \"ROMOPMappingTools\")  usagiTibble <- readUsagiFile(pathToUsagiFile)  usagiTibble |> dplyr::glimpse() #> Rows: 3,945 #> Columns: 25 #> $ sourceCode                        <chr> \"A01.0+G01\", \"A01.0+I39.8\", \"A01.0+J… #> $ sourceName                        <chr> \"Meningitis (in) typhoid fever\", \"En… #> $ sourceFrequency                   <int> -1, -1, -1, -1, -1, -1, -1, -1, -1, … #> $ sourceAutoAssignedConceptIds      <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ `ADD_INFO:sourceConceptId`        <dbl> 2000500101, 2000500102, 2000500103, … #> $ `ADD_INFO:sourceName_fi`          <chr> \"Lavantautiin liittyvä aivokalvotule… #> $ `ADD_INFO:sourceConceptClass`     <chr> \"ICD10fi Hierarchy\", \"ICD10fi Hierar… #> $ `ADD_INFO:sourceDomain`           <chr> \"Condition\", \"Condition\", \"Condition… #> $ `ADD_INFO:sourceValidStartDate`   <date> 1900-01-01, 1900-01-01, 1900-01-01,… #> $ `ADD_INFO:sourceValidEndDate`     <date> 2099-12-31, 2099-12-31, 2099-12-31,… #> $ `ADD_INFO:sourceParents`          <chr> \"A01|A01.0|G01\", \"A01|A01.0|I39.8\", … #> $ `ADD_INFO:sourceParentVocabulary` <chr> \"ICD10|ICD10|ICD10\", \"ICD10|ICD10|IC… #> $ matchScore                        <dbl> 0.00, 0.00, 0.00, 0.78, 0.00, 0.00, … #> $ mappingStatus                     <chr> \"APPROVED\", \"APPROVED\", \"APPROVED\", … #> $ equivalence                       <chr> \"EQUAL\", \"EQUAL\", \"EQUAL\", \"EQUIVALE… #> $ statusSetBy                       <chr> \"PKo\", \"PKo\", \"PKo\", \"PKo\", \"PKo\", \"… #> $ statusSetOn                       <dbl> 1.666794e+12, 1.666794e+12, 1.666794… #> $ conceptId                         <int> 4100102, 4111401, 4166072, 80316, 43… #> $ conceptName                       <chr> \"Meningitis due to typhoid fever\", \"… #> $ domainId                          <chr> \"Condition\", \"Condition\", \"Condition… #> $ mappingType                       <chr> \"MAPS_TO\", \"MAPS_TO\", \"MAPS_TO\", \"MA… #> $ comment                           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ createdBy                         <chr> \"TAYS\", \"TAYS\", \"TAYS\", \"PKo\", \"TAYS… #> $ createdOn                         <dbl> 1.623974e+12, 1.623974e+12, 1.623974… #> $ assignedReviewer                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, …"},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithOneMappingFile.html","id":"validating-a-usagi-file","dir":"Articles","previous_headings":"Intro","what":"Validating a Usagi file","title":"Working with individual mapping files","text":"validate information Usagi file correct, can use validateUsagiFile function. function takes Usagi Usagi-extended file performs series validations, see function help details ?validateUsagiFile. function also needs connection OMOP vocabulary database schema vocabulary tables stored order make validations. function also need number used offset source concept ids Usagi file. function returns tibble summary validations conducted error found, new Usagi file errors created specified path. example, use test database DuckDB format included package. test database contains ICD10 vocabulary keys tables (see inst/testdata/createTestData.R details). case Usagi file valid errors found. Hence, new validated Usagi file remains unchanged. However, can see happens usagi file errors. case use Usagi file type errors, wich included package unit testing purposes. case, open new validate Usagi Usagi software mapping errors appear FLAGGED. Additionally, ADD_INFO:validationMessages column indicate exact error errors found.","code":"pathToOMOPVocabularyDuckDBfile <-  helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB()  connectionDetails <- DatabaseConnector::createConnectionDetails(     dbms = \"duckdb\",     server = pathToOMOPVocabularyDuckDBfile )  connection <- DatabaseConnector::connect(connectionDetails) #> Connecting using DuckDB driver vocabularyDatabaseSchema <- \"main\"  pathToValidatedUsagiFile  <- tempfile(fileext = \"usagi_validated.csv\") validationsSummary <- validateUsagiFile(   pathToUsagiFile,   connection,   vocabularyDatabaseSchema,   pathToValidatedUsagiFile = pathToValidatedUsagiFile,    sourceConceptIdOffset = 2000500000 ) knitr::kable(validationsSummary) pathToUsagiFileWithErrors <- system.file(\"testdata/VOCABULARIES/ICD10fi/ICD10fi_with_errors.usagi.csv\", package = \"ROMOPMappingTools\")  usagiTibbleWithErrors <- readUsagiFile(pathToUsagiFileWithErrors) validationsSummaryWithErrors <- validateUsagiFile(   pathToUsagiFileWithErrors,   connection,   vocabularyDatabaseSchema,   pathToValidatedUsagiFile = pathToValidatedUsagiFile,   sourceConceptIdOffset = 2000500000 ) knitr::kable(validationsSummaryWithErrors)"},{"path":"https://finomop.github.io/ROMOPMappingTools/articles/workWithOneMappingFile.html","id":"updating-a-usagi-file","dir":"Articles","previous_headings":"Intro","what":"Updating a Usagi file","title":"Working with individual mapping files","text":"vocabulary updated since Usagi file created, may happen mappings outdated. detected validateUsagiFile show “ConceptIds outdated” error. case use Usagi file outdated concept ids, included package unit testing purposes. outdated error detected, can attempt update Usagi file automatically using updateUsagiFile function. function takes Usagi Usagi-extended file, connection database, schema vocabulary tables path file store updated Usagi file. fuction updates changes domain_id, concept_name mapped concept_id point non-standard concept try find new mapping (done looking relationship table relationships old concept_id “Maps ”, “Concept replaced ”, “Concept same_as ” “Concept poss_eq ” order). new column ADD_INFO:autoUpdatingInfo added updated Usagi file show specific changes made file. times, like case, new concept_id can found, shown warning. new updates Usagi file can validated validateUsagiFile function check errors. Unfortunatelly, sometimes updateUsagiFile introducing new errors, case updates vocabulary introduced invalid domain combinations. Moreover, mappings updated new concept_id found. need fixed user reviewing Usagi file.","code":"pathToOutdatedUsagiFile <- system.file(\"testdata/VOCABULARIES/ICD10fi/ICD10fi_outdated.usagi.csv\", package = \"ROMOPMappingTools\")  validationsSummaryWithErrors <- validateUsagiFile(   pathToOutdatedUsagiFile,   connection,   vocabularyDatabaseSchema,   pathToValidatedUsagiFile = pathToValidatedUsagiFile,   sourceConceptIdOffset = 2000500000 )  knitr::kable(validationsSummaryWithErrors) pathToUpdatedUsagiFile <- tempfile(fileext = \"usagi_updated.csv\")  updateSummary <- updateUsagiFile(     pathToOutdatedUsagiFile,      connection,     vocabularyDatabaseSchema,     pathToUpdatedUsagiFile,     skipValidation = TRUE   ) #> Note: method with signature 'DBIConnection#SQL' chosen for function 'dbQuoteIdentifier', #>  target signature 'DatabaseConnectorDbiConnection#SQL'. #>  \"DatabaseConnectorConnection#character\" would also be valid  knitr::kable(updateSummary) validationsSummaryWithErrors <- validateUsagiFile(   pathToUpdatedUsagiFile,   connection,   vocabularyDatabaseSchema,   pathToValidatedUsagiFile = pathToValidatedUsagiFile,   sourceConceptIdOffset = 2000500000 )  knitr::kable(validationsSummaryWithErrors)"},{"path":"https://finomop.github.io/ROMOPMappingTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Javier Gracia-Tabuenca. Author, maintainer.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gracia-Tabuenca J (2025). ROMOPMappingTools: Tools Working OMOP CDM Mappings. R package version 2.1.1, https://finomop.github.io/ROMOPMappingTools/.","code":"@Manual{,   title = {ROMOPMappingTools: Tools for Working with OMOP CDM Mappings},   author = {Javier Gracia-Tabuenca},   year = {2025},   note = {R package version 2.1.1},   url = {https://finomop.github.io/ROMOPMappingTools/}, }"},{"path":"https://finomop.github.io/ROMOPMappingTools/index.html","id":"romopmappingtools","dir":"","previous_headings":"","what":"Tools for Working with OMOP CDM Mappings","title":"Tools for Working with OMOP CDM Mappings","text":"ROMOPMappingTools provides functions validate, update, summarize multiple Usagi mapping files, well transform OMOP vocabulary tables. Functions can use three different levels: Validate Usagi mapping files: conceptIds exist OMOP vocabulary, domain combinations correct, etc. Update Usagi mapping : Automatically fixes mapping become obsolete due new OMOP vocabulary releases. Validate, update multiple mapping files . Transform append group Usagi mapping files OMOP vocabulary tables: Concept, concept_relationship, concept_ancestor tables. Run DQD new OMOP vocabulary tables. Build status dashboard show progress multiple mapping files. Create github action workflows automatically validate Usagi files pull request. Create github action workflows automatically update progress dashboard pull request merged. See vignettes details. See FimOMOP repository example use package github repository.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":null,"dir":"Reference","previous_headings":"","what":"LogTibble — LogTibble","title":"LogTibble — LogTibble","text":"Class managing log messages tibble.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"LogTibble — LogTibble","text":"logTibble get tibble","code":""},{"path":[]},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"LogTibble — LogTibble","text":"LogTibble$new() LogTibble$addLog() LogTibble$INFO() LogTibble$WARNING() LogTibble$ERROR() LogTibble$SUCCESS() LogTibble$FATAL() LogTibble$print() LogTibble$clone()","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"LogTibble — LogTibble","text":"Initializes new LogTibble object. addLog","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$new()"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"method-addlog-","dir":"Reference","previous_headings":"","what":"Method addLog()","title":"LogTibble — LogTibble","text":"Adds log message log tibble.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$addLog(type, step, message, ...)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"type Type log message (\"INFO\", \"WARNING\", \"ERROR\", \"SUCCESS\") step Step description associated log message message Log message content ... Additional parameters message formatting INFO","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method INFO()","title":"LogTibble — LogTibble","text":"Adds informational log message log tibble.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$INFO(step, message, ...)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"step Step description associated log message message Log message content ... Additional parameters message formatting WARNING","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"method-warning-","dir":"Reference","previous_headings":"","what":"Method WARNING()","title":"LogTibble — LogTibble","text":"Adds warning log message log tibble.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$WARNING(step, message, ...)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"step Step description associated log message message Log message content ... Additional parameters message formatting ERROR","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"method-error-","dir":"Reference","previous_headings":"","what":"Method ERROR()","title":"LogTibble — LogTibble","text":"Adds error log message log tibble.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$ERROR(step, message, ...)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"step Step description associated log message message Log message content ... Additional parameters message formatting SUCCESS","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"method-success-","dir":"Reference","previous_headings":"","what":"Method SUCCESS()","title":"LogTibble — LogTibble","text":"Adds error log message log tibble.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$SUCCESS(step, message, ...)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"step Step description associated log message message Log message content ... Additional parameters message formatting FATAL","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"method-fatal-","dir":"Reference","previous_headings":"","what":"Method FATAL()","title":"LogTibble — LogTibble","text":"Adds fatal log message log tibble.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$FATAL(step, message, ...)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"step Step description associated log message message Log message content ... Additional parameters message formatting print","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"LogTibble — LogTibble","text":"prints log.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$print()"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"LogTibble — LogTibble","text":"objects class cloneable method.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$clone(deep = FALSE)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/LogTibble.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"deep Whether make deep clone.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/STCMToCDMTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Source to Concept Map to CDM Tables — STCMToCDMTables","title":"Convert Source to Concept Map to CDM Tables — STCMToCDMTables","text":"Converts contents Source Concept Map table standard CDM vocabulary tables. includes creating entries : CONCEPT table source concepts CONCEPT_RELATIONSHIP table mapping relationships Additional relationship types using extended STCM format","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/STCMToCDMTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Source to Concept Map to CDM Tables — STCMToCDMTables","text":"","code":"STCMToCDMTables(connection, vocabularyDatabaseSchema, sourceToConceptMapTable)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/STCMToCDMTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Source to Concept Map to CDM Tables — STCMToCDMTables","text":"connection DatabaseConnector connection object vocabularyDatabaseSchema Schema name vocabulary tables stored sourceToConceptMapTable Name source concept map table","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/appendUsagiFileToSTCMtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Append Usagi File to Source to Concept Map Table — appendUsagiFileToSTCMtable","title":"Append Usagi File to Source to Concept Map Table — appendUsagiFileToSTCMtable","text":"Reads Usagi mapping file appends contents Source Concept Map table. function supports default extended formats Usagi files STCM tables.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/appendUsagiFileToSTCMtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append Usagi File to Source to Concept Map Table — appendUsagiFileToSTCMtable","text":"","code":"appendUsagiFileToSTCMtable(   vocabularyId,   pathToUsagiFile,   connection,   vocabularyDatabaseSchema,   sourceToConceptMapTable,   includeConcepts = c(\"APPROVED\", \"UNCHECKED\", \"INVALID_TARGET\"),   includeMappings = c(\"APPROVED\"),   skipValidation = TRUE,   sourceConceptIdOffset = 0 )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/appendUsagiFileToSTCMtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append Usagi File to Source to Concept Map Table — appendUsagiFileToSTCMtable","text":"vocabularyId String vocabulary ID pathToUsagiFile Path Usagi file connection Database connection object vocabularyDatabaseSchema Schema name containing vocabulary tables sourceToConceptMapTable Name source concept map table includeConcepts Vector mapping statuses include. Must subset : \"APPROVED\", \"UNCHECKED\", \"FLAGGED\", \"INEXACT\", \"INVALID_TARGET\" includeMappings Vector mapping statuses include. Must subset : \"APPROVED\", \"UNCHECKED\", \"FLAGGED\", \"INVALID_TARGET\" skipValidation Whether skip validation Usagi file (default: TRUE) sourceConceptIdOffset Offset add source concept IDs (default: 0)","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/appendUsagiFileToSTCMtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append Usagi File to Source to Concept Map Table — appendUsagiFileToSTCMtable","text":"NULL invisibly. function modifies database table directly.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/appendUsagiFileToSTCMtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Append Usagi File to Source to Concept Map Table — appendUsagiFileToSTCMtable","text":"Default STCM columns: source_code, source_concept_id, source_vocabulary_id, source_code_description target_concept_id, target_vocabulary_id, valid_start_date, valid_end_date invalid_reason Extended STCM columns (includes default columns plus): source_concept_class source_domain source_parents_concept_ids Extended Usagi columns: ADD_INFO:sourceConceptId ADD_INFO:sourceConceptClass ADD_INFO:sourceDomain formats match (e.g., extended Usagi default STCM), extended information ignored warning.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/autoFixDatabaseCodeCountsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"autoFixDatabaseCodeCountTable — autoFixDatabaseCodeCountsFile","title":"autoFixDatabaseCodeCountTable — autoFixDatabaseCodeCountsFile","text":"Automatically fixes issues database code count table.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/autoFixDatabaseCodeCountsFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autoFixDatabaseCodeCountTable — autoFixDatabaseCodeCountsFile","text":"","code":"autoFixDatabaseCodeCountsFile(   pathToCodeCountsFile,   pathToCodeCountsFileFixed = pathToCodeCountsFile,   keepOnlySourceVocabularyIds = NULL )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/autoFixDatabaseCodeCountsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autoFixDatabaseCodeCountTable — autoFixDatabaseCodeCountsFile","text":"pathToCodeCountsFile Path CSV file containing database code counts. pathToCodeCountsFileFixed Path fixed CSV file saved. Defaults overwriting input file. keepOnlySourceVocabularyIds Vector source vocabulary IDs keep. source vocabularies removed. NULL, keeps vocabularies.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/autoFixDatabaseCodeCountsFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autoFixDatabaseCodeCountTable — autoFixDatabaseCodeCountsFile","text":"Tibble containing fixed database code count table.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/autoFixDatabaseCodeCountsFile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"autoFixDatabaseCodeCountTable — autoFixDatabaseCodeCountsFile","text":"function performs following fixes provided database code count table: Removes unused source vocabularies based specified keep_only_source_vocabulary_ids. Sums repeated values source vocabulary source code. Removes events count less 5.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildStatusDashboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Status Dashboard — buildStatusDashboard","title":"Build Status Dashboard — buildStatusDashboard","text":"function generates status dashboard mapping status.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildStatusDashboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Status Dashboard — buildStatusDashboard","text":"","code":"buildStatusDashboard(   pathToCodeCountsFolder,   pathToVocabularyFolder,   connectionDetails,   vocabularyDatabaseSchema,   outputFolderPath = tempdir(),   fileIssueRepo = \"\" )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildStatusDashboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Status Dashboard — buildStatusDashboard","text":"pathToCodeCountsFolder Path folder containing code counts files pathToVocabularyFolder Path folder containing vocabulary files connectionDetails DatabaseConnector connection details object vocabularyDatabaseSchema Schema containing vocabulary tables outputFolderPath path output folder HTML output fileIssueRepo repository file issues ","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildStatusDashboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Status Dashboard — buildStatusDashboard","text":"Path output HTML file","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildUpdateStatusMd.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Update Status Markdown — buildUpdateStatusMd","title":"Build Update Status Markdown — buildUpdateStatusMd","text":"Creates markdown file containing update status results. markdown file includes table showing update results : Context update Type message (SUCCESS, WARNING, ERROR) Update step Detailed message","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildUpdateStatusMd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Update Status Markdown — buildUpdateStatusMd","text":"","code":"buildUpdateStatusMd(   updateLogTibble,   pathToUpdateStatusMdFile = file.path(tempdir(),     \"VOCABULARIES_LAST_AUTOMATIC_UPDATE_STATUS.md\") )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildUpdateStatusMd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Update Status Markdown — buildUpdateStatusMd","text":"updateLogTibble tibble containing update results columns: context, type, step, message pathToUpdateStatusMdFile Path markdown file saved (default: tempdir()/VOCABULARIES_LAST_AUTOMATIC_UPDATE_STATUS.md)","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildUpdateStatusMd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Update Status Markdown — buildUpdateStatusMd","text":"Path generated markdown file","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildValidationStatusMd.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Validation Status Markdown — buildValidationStatusMd","title":"Build Validation Status Markdown — buildValidationStatusMd","text":"Creates markdown file containing validation status results. markdown file includes table showing validation results : Context validation Type message (SUCCESS, WARNING, ERROR) Validation step Detailed message","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildValidationStatusMd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Validation Status Markdown — buildValidationStatusMd","text":"","code":"buildValidationStatusMd(   validationLogTibble,   pathToValidationStatusMdFile = file.path(tempdir(),     \"VOCABULARIES_VALIDATION_STATUS.md\") )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildValidationStatusMd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Validation Status Markdown — buildValidationStatusMd","text":"validationLogTibble tibble containing validation results columns: context, type, step, message pathToValidationStatusMdFile Path markdown file saved (default: tempdir()/VOCABULARIES_VALIDATION_STATUS.md)","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildValidationStatusMd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Validation Status Markdown — buildValidationStatusMd","text":"Path generated markdown file","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildVocabulariesAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Run All Validation and Upload Steps — buildVocabulariesAll","title":"Run All Validation and Upload Steps — buildVocabulariesAll","text":"Runs complete workflow validating vocabulary files uploading CDM tables. performs following steps: Validate vocabulary folder sourceToConceptMapTable NULL, create SourceToConceptMap table Upload vocabulary.csv Usagi files SourceToConceptMap table Move SourceToConceptMap table CDM table Validate CDM tables DQD","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildVocabulariesAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run All Validation and Upload Steps — buildVocabulariesAll","text":"","code":"buildVocabulariesAll(   pathToVocabularyFolder,   connectionDetails,   vocabularyDatabaseSchema,   validationResultsFolder,   sourceToConceptMapTable = NULL )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/buildVocabulariesAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run All Validation and Upload Steps — buildVocabulariesAll","text":"pathToVocabularyFolder Path folder containing vocabulary files connectionDetails DatabaseConnector connection details object vocabularyDatabaseSchema Schema containing vocabulary tables validationResultsFolder Folder validation results saved sourceToConceptMapTable Optional name source concept map table","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/calculateMappingStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"calculateMappingStatus — calculateMappingStatus","title":"calculateMappingStatus — calculateMappingStatus","text":"Calculates mapping status code counts different databases vocabularies.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/calculateMappingStatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculateMappingStatus — calculateMappingStatus","text":"","code":"calculateMappingStatus(   pathToCodeCountsFolder,   connectionDetails,   vocabularyDatabaseSchema,   includeCountForAllDatabases = TRUE,   skipValidation = TRUE )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/calculateMappingStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculateMappingStatus — calculateMappingStatus","text":"pathToCodeCountsFolder path vocabularies coverage file. connectionDetails connection details OMOP tables. vocabularyDatabaseSchema database schema OMOP vocabulary. includeCountForAllDatabases Logical value indicating whether include code counts databases (default TRUE). skipValidation Logical value indicating whether skip validation input parameters (default TRUE).","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/calculateMappingStatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculateMappingStatus — calculateMappingStatus","text":"list containing two tables: concepts_to_match code_counts_matched, representing mapping status code counts.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/calculateMappingStatus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calculateMappingStatus — calculateMappingStatus","text":"function calculates mapping status code counts different databases vocabularies. calculation involves following steps: Validating input parameters ensure meet required format. Reading validating provided vocabularies coverage file. Creating table called concepts_to_match collects concepts OMOP mapping relationships synonyms. Creating table called all_code_counts contains code counts vocabularies coverage, optionally ignoring databases failed rules. Creating new database called \"all_databases\" normalized event counts across databases. Calculating percentage codes per database vocabulary. Calculating mapping status code counts based whether mappings codes. Returning mapping status information form two tables: concepts_to_match code_counts_matched.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/conceptRelationshipToAncestorTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert CONCEPT_RELATIONSHIP to CONCEPT_ANCESTOR — conceptRelationshipToAncestorTables","title":"Convert CONCEPT_RELATIONSHIP to CONCEPT_ANCESTOR — conceptRelationshipToAncestorTables","text":"Creates populates CONCEPT_ANCESTOR table CONCEPT_RELATIONSHIP table data.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/conceptRelationshipToAncestorTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert CONCEPT_RELATIONSHIP to CONCEPT_ANCESTOR — conceptRelationshipToAncestorTables","text":"","code":"conceptRelationshipToAncestorTables(   connection,   vocabularyDatabaseSchema,   vocabularyList )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/conceptRelationshipToAncestorTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert CONCEPT_RELATIONSHIP to CONCEPT_ANCESTOR — conceptRelationshipToAncestorTables","text":"connection DatabaseConnector connection object vocabularyDatabaseSchema Schema containing vocabulary STCM tables vocabularyList Vector vocabulary_ids include (default: c(\"ICD10\"))","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/conceptRelationshipToAncestorTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert CONCEPT_RELATIONSHIP to CONCEPT_ANCESTOR — conceptRelationshipToAncestorTables","text":"Invisible TRUE successful","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/createSourceToConceptMapExtended.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Extended Source to Concept Map Table — createSourceToConceptMapExtended","title":"Create Extended Source to Concept Map Table — createSourceToConceptMapExtended","text":"Creates extended version Source Concept Map table includes additional columns source concept class, domain, parent relationships.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/createSourceToConceptMapExtended.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Extended Source to Concept Map Table — createSourceToConceptMapExtended","text":"","code":"createSourceToConceptMapExtended(   connection,   vocabularyDatabaseSchema,   sourceToConceptMapTable,   overwrite = TRUE )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/createSourceToConceptMapExtended.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Extended Source to Concept Map Table — createSourceToConceptMapExtended","text":"connection DatabaseConnector connection object vocabularyDatabaseSchema Schema name vocabulary tables stored sourceToConceptMapTable Name extended source concept map table create overwrite Whether overwrite existing table. Default TRUE","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-background_bar_reactable_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a bar chart in the background of the cell — .background_bar_reactable_style","title":"Render a bar chart in the background of the cell — .background_bar_reactable_style","text":"Render bar chart background cell","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-background_bar_reactable_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a bar chart in the background of the cell — .background_bar_reactable_style","text":"","code":".background_bar_reactable_style(   string_values,   colors = NULL,   height = \"60%\",   width = \"95%\",   background_color = \"#FFFFFF\",   text_color = \"#FFFFFF\" )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-background_bar_reactable_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a bar chart in the background of the cell — .background_bar_reactable_style","text":"string_values String values separated '-' colors Vector colors height Height bar width Width bar background_color Background color text_color Text color","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-background_bar_reactable_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a bar chart in the background of the cell — .background_bar_reactable_style","text":"list CSS style properties","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getCodeCountsForVocabularyAndDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Get code counts for a vocabulary and database — .getCodeCountsForVocabularyAndDatabase","title":"Get code counts for a vocabulary and database — .getCodeCountsForVocabularyAndDatabase","text":"Get code counts vocabulary database","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getCodeCountsForVocabularyAndDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get code counts for a vocabulary and database — .getCodeCountsForVocabularyAndDatabase","text":"","code":".getCodeCountsForVocabularyAndDatabase(   pathToCodeCountsFolder,   sourceVocabularyId,   databaseName )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getCodeCountsForVocabularyAndDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get code counts for a vocabulary and database — .getCodeCountsForVocabularyAndDatabase","text":"pathToCodeCountsFolder Path code counts folder sourceVocabularyId Source vocabulary ID databaseName Database name","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getCodeCountsForVocabularyAndDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get code counts for a vocabulary and database — .getCodeCountsForVocabularyAndDatabase","text":"Code counts tibble","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getDatabaseSummaryForVocabulary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get database summary for a vocabulary — .getDatabaseSummaryForVocabulary","title":"Get database summary for a vocabulary — .getDatabaseSummaryForVocabulary","text":"Get database summary vocabulary","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getDatabaseSummaryForVocabulary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get database summary for a vocabulary — .getDatabaseSummaryForVocabulary","text":"","code":".getDatabaseSummaryForVocabulary(   connectionDetails,   vocabularyDatabaseSchema,   targetVocabularyIds )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getDatabaseSummaryForVocabulary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get database summary for a vocabulary — .getDatabaseSummaryForVocabulary","text":"connectionDetails Connection details vocabularyDatabaseSchema Vocabulary database schema targetVocabularyIds Target vocabulary IDs","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getDatabaseSummaryForVocabulary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get database summary for a vocabulary — .getDatabaseSummaryForVocabulary","text":"Database summary tibble","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getSummaryListForVocabulary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summary list for a vocabulary — .getSummaryListForVocabulary","title":"Get summary list for a vocabulary — .getSummaryListForVocabulary","text":"Get summary list vocabulary","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getSummaryListForVocabulary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summary list for a vocabulary — .getSummaryListForVocabulary","text":"","code":".getSummaryListForVocabulary(   pathToCodeCountsFolder,   pathToVocabularyFolder,   connectionDetails,   vocabularyDatabaseSchema,   sourceVocabularyId,   targetVocabularyIds )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getSummaryListForVocabulary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summary list for a vocabulary — .getSummaryListForVocabulary","text":"pathToCodeCountsFolder Path code counts folder pathToVocabularyFolder Path vocabulary folder connectionDetails Connection details vocabularyDatabaseSchema Vocabulary database schema sourceVocabularyId Source vocabulary ID targetVocabularyIds Target vocabulary IDs","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getSummaryListForVocabulary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get summary list for a vocabulary — .getSummaryListForVocabulary","text":"List summary tables database","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getSummaryTableForVocabularyAndDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summary table for a vocabulary and database — .getSummaryTableForVocabularyAndDatabase","title":"Get summary table for a vocabulary and database — .getSummaryTableForVocabularyAndDatabase","text":"Get summary table vocabulary database","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getSummaryTableForVocabularyAndDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summary table for a vocabulary and database — .getSummaryTableForVocabularyAndDatabase","text":"","code":".getSummaryTableForVocabularyAndDatabase(   pathToCodeCountsFolder,   pathToVocabularyFolder,   connectionDetails,   vocabularyDatabaseSchema,   sourceVocabularyId,   targetVocabularyIds,   databaseName )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getSummaryTableForVocabularyAndDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summary table for a vocabulary and database — .getSummaryTableForVocabularyAndDatabase","text":"pathToCodeCountsFolder Path code counts folder pathToVocabularyFolder Path vocabulary folder connectionDetails Connection details vocabularyDatabaseSchema Vocabulary database schema sourceVocabularyId Source vocabulary ID targetVocabularyIds Target vocabulary IDs databaseName Database name","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getSummaryTableForVocabularyAndDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get summary table for a vocabulary and database — .getSummaryTableForVocabularyAndDatabase","text":"Summary table tibble","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getUsagiSummaryForVocabulary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Usagi summary for a vocabulary — .getUsagiSummaryForVocabulary","title":"Get Usagi summary for a vocabulary — .getUsagiSummaryForVocabulary","text":"Get Usagi summary vocabulary","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getUsagiSummaryForVocabulary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Usagi summary for a vocabulary — .getUsagiSummaryForVocabulary","text":"","code":".getUsagiSummaryForVocabulary(pathToVocabularyFolder, sourceVocabularyId)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getUsagiSummaryForVocabulary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Usagi summary for a vocabulary — .getUsagiSummaryForVocabulary","text":"pathToVocabularyFolder Path vocabulary folder sourceVocabularyId Source vocabulary ID","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-getUsagiSummaryForVocabulary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Usagi summary for a vocabulary — .getUsagiSummaryForVocabulary","text":"Usagi summary tibble","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-pageCoverageVocabularyDatabases.html","id":null,"dir":"Reference","previous_headings":"","what":"Render coverage page for a vocabulary and its databases — .pageCoverageVocabularyDatabases","title":"Render coverage page for a vocabulary and its databases — .pageCoverageVocabularyDatabases","text":"Render coverage page vocabulary databases","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-pageCoverageVocabularyDatabases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render coverage page for a vocabulary and its databases — .pageCoverageVocabularyDatabases","text":"","code":".pageCoverageVocabularyDatabases(   summaryTableForVocabularyAndDatabaseList,   usagiTibble,   sourceVocabularyId,   outputFolderPath,   pathToNewsFile,   fileIssueRepo = \"\" )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-pageCoverageVocabularyDatabases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render coverage page for a vocabulary and its databases — .pageCoverageVocabularyDatabases","text":"summaryTableForVocabularyAndDatabaseList List summary tables usagiTibble Usagi tibble sourceVocabularyId Source vocabulary ID outputFolderPath Output folder path pathToNewsFile Path NEWS.md file fileIssueRepo repository file issues ","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-pageCoverageVocabularyDatabases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render coverage page for a vocabulary and its databases — .pageCoverageVocabularyDatabases","text":"Path output HTML file","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-pageSummaryAllVocabularies.html","id":null,"dir":"Reference","previous_headings":"","what":"Render summary page for all vocabularies — .pageSummaryAllVocabularies","title":"Render summary page for all vocabularies — .pageSummaryAllVocabularies","text":"Render summary page vocabularies","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-pageSummaryAllVocabularies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render summary page for all vocabularies — .pageSummaryAllVocabularies","text":"","code":".pageSummaryAllVocabularies(summaryAllVocabularies, outputFolderPath)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-pageSummaryAllVocabularies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render summary page for all vocabularies — .pageSummaryAllVocabularies","text":"summaryAllVocabularies Tibble summary vocabularies outputFolderPath Output folder path","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-pageSummaryAllVocabularies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render summary page for all vocabularies — .pageSummaryAllVocabularies","text":"Path output HTML file","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotSummaryTableForUsagiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summary table for Usagi file — .plotSummaryTableForUsagiFile","title":"Plot summary table for Usagi file — .plotSummaryTableForUsagiFile","text":"Plot summary table Usagi file","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotSummaryTableForUsagiFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summary table for Usagi file — .plotSummaryTableForUsagiFile","text":"","code":".plotSummaryTableForUsagiFile(   usagiTibble,   colors = list(flagged = \"#EC6173\", unchecked = \"#F1AE4A\", approved = \"#51A350\", inexact     = \"#AAAAAA\") )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotSummaryTableForUsagiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summary table for Usagi file — .plotSummaryTableForUsagiFile","text":"usagiTibble Usagi tibble colors List colors","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotSummaryTableForUsagiFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summary table for Usagi file — .plotSummaryTableForUsagiFile","text":"reactable table object","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotSummaryTableForVocabularyAndDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summary table for a vocabulary and database — .plotSummaryTableForVocabularyAndDatabase","title":"Plot summary table for a vocabulary and database — .plotSummaryTableForVocabularyAndDatabase","text":"Plot summary table vocabulary database","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotSummaryTableForVocabularyAndDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summary table for a vocabulary and database — .plotSummaryTableForVocabularyAndDatabase","text":"","code":".plotSummaryTableForVocabularyAndDatabase(   summaryTableForVocabularyAndDatabase,   colors = list(invalid = \"#EC6173\", unmapped = \"#F1AE4A\", mapsTo = \"#51A350\", grey =     \"#AAAAAA\") )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotSummaryTableForVocabularyAndDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summary table for a vocabulary and database — .plotSummaryTableForVocabularyAndDatabase","text":"summaryTableForVocabularyAndDatabase Tibble summary colors List colors","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotSummaryTableForVocabularyAndDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summary table for a vocabulary and database — .plotSummaryTableForVocabularyAndDatabase","text":"reactable table object","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableForUsagiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Usagi file table — .plotTableForUsagiFile","title":"Plot Usagi file table — .plotTableForUsagiFile","text":"Plot Usagi file table","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableForUsagiFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Usagi file table — .plotTableForUsagiFile","text":"","code":".plotTableForUsagiFile(   usagiTibble,   colors = list(flagged = \"#EC6173\", unchecked = \"#F1AE4A\", approved = \"#51A350\", inexact     = \"#AAAAAA\") )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableForUsagiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Usagi file table — .plotTableForUsagiFile","text":"usagiTibble Usagi tibble colors List colors","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableForUsagiFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Usagi file table — .plotTableForUsagiFile","text":"reactable table object","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableForVocabularyAndDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot detailed table for a vocabulary and database — .plotTableForVocabularyAndDatabase","title":"Plot detailed table for a vocabulary and database — .plotTableForVocabularyAndDatabase","text":"Plot detailed table vocabulary database","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableForVocabularyAndDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot detailed table for a vocabulary and database — .plotTableForVocabularyAndDatabase","text":"","code":".plotTableForVocabularyAndDatabase(   summaryTableForVocabularyAndDatabase,   databaseName,   vocabularyId,   colors = list(invalid = \"#EC6173\", unmapped = \"#F1AE4A\", mapsTo = \"#51A350\", grey =     \"#AAAAAA\"),   fileIssueRepo = \"\" )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableForVocabularyAndDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot detailed table for a vocabulary and database — .plotTableForVocabularyAndDatabase","text":"summaryTableForVocabularyAndDatabase Tibble summary databaseName Database name vocabularyId Vocabulary ID colors List colors fileIssueRepo repository file issues ","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableForVocabularyAndDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot detailed table for a vocabulary and database — .plotTableForVocabularyAndDatabase","text":"reactable table object","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableSummaryAllVocabularies.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summary table for all vocabularies — .plotTableSummaryAllVocabularies","title":"Plot summary table for all vocabularies — .plotTableSummaryAllVocabularies","text":"Plot summary table vocabularies","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableSummaryAllVocabularies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summary table for all vocabularies — .plotTableSummaryAllVocabularies","text":"","code":".plotTableSummaryAllVocabularies(   summaryAllVocabularies,   colors = list(invalid = \"#EC6173\", unmapped = \"#F1AE4A\", mapsTo = \"#51A350\", grey =     \"#AAAAAA\") )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableSummaryAllVocabularies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summary table for all vocabularies — .plotTableSummaryAllVocabularies","text":"summaryAllVocabularies Tibble summary vocabularies colors List colors bar chart","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-plotTableSummaryAllVocabularies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summary table for all vocabularies — .plotTableSummaryAllVocabularies","text":"reactable table object","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-tip_reactable_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Tooltip for reactable cell — .tip_reactable_cell","title":"Tooltip for reactable cell — .tip_reactable_cell","text":"Tooltip reactable cell","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-tip_reactable_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tooltip for reactable cell — .tip_reactable_cell","text":"","code":".tip_reactable_cell(   string_values,   row_names = NULL,   unit_names = NULL,   only_percent = FALSE )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-tip_reactable_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tooltip for reactable cell — .tip_reactable_cell","text":"string_values String values separated '-' row_names Row names tooltip unit_names Unit names tooltip only_percent Logical, show percent","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/dot-tip_reactable_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tooltip for reactable cell — .tip_reactable_cell","text":"shiny div tippy tooltip","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/duckdbToOMOPVocabularyCSVs.html","id":null,"dir":"Reference","previous_headings":"","what":"Export vocabulary tables from a database to CSV files — duckdbToOMOPVocabularyCSVs","title":"Export vocabulary tables from a database to CSV files — duckdbToOMOPVocabularyCSVs","text":"Export vocabulary tables database CSV files","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/duckdbToOMOPVocabularyCSVs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export vocabulary tables from a database to CSV files — duckdbToOMOPVocabularyCSVs","text":"","code":"duckdbToOMOPVocabularyCSVs(   connection,   vocabularyDatabaseSchema,   OMOPVocabularyTableNames,   pathToOMOPVocabularyCSVsFolder )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/duckdbToOMOPVocabularyCSVs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export vocabulary tables from a database to CSV files — duckdbToOMOPVocabularyCSVs","text":"connection DatabaseConnector connection object database containing vocabulary tables vocabularyDatabaseSchema Schema name vocabulary tables located OMOPVocabularyTableNames Vector vocabulary table names export. NULL, exports standard set. pathToOMOPVocabularyCSVsFolder Directory path CSV files written","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/duckdbToOMOPVocabularyCSVs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export vocabulary tables from a database to CSV files — duckdbToOMOPVocabularyCSVs","text":"return value, called side effects","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Temporary Copy of the OMOP Vocabulary DuckDB — helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB","title":"Create a Temporary Copy of the OMOP Vocabulary DuckDB — helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB","text":"function creates temporary copy OMOP vocabulary DuckDB file package's test data.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Temporary Copy of the OMOP Vocabulary DuckDB — helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB","text":"","code":"helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB(   pathToFullOMOPVocabularyCSVsFolder = NULL )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Temporary Copy of the OMOP Vocabulary DuckDB — helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB","text":"pathToFullOMOPVocabularyCSVsFolder character string containing path full OMOP vocabulary CSVs folder.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Temporary Copy of the OMOP Vocabulary DuckDB — helper_createATemporaryCopyOfTheOMOPVocabularyDuckDB","text":"character string containing path temporary copy DuckDB file","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/omopVocabularyCSVsToDuckDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OMOP Vocabulary CSVs to Database — omopVocabularyCSVsToDuckDB","title":"Convert OMOP Vocabulary CSVs to Database — omopVocabularyCSVsToDuckDB","text":"function converts OMOP vocabulary CSV files Database.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/omopVocabularyCSVsToDuckDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OMOP Vocabulary CSVs to Database — omopVocabularyCSVsToDuckDB","text":"","code":"omopVocabularyCSVsToDuckDB(   pathToOMOPVocabularyCSVsFolder,   connection,   vocabularyDatabaseSchema )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/omopVocabularyCSVsToDuckDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OMOP Vocabulary CSVs to Database — omopVocabularyCSVsToDuckDB","text":"pathToOMOPVocabularyCSVsFolder Path folder containing OMOP vocabulary CSV files connection DatabaseConnector connection object vocabularyDatabaseSchema Schema name vocabulary tables stored","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/omopVocabularyCSVsToDuckDB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OMOP Vocabulary CSVs to Database — omopVocabularyCSVsToDuckDB","text":"Nothing","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/plotTableMappingStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"tableMappingStatus — plotTableMappingStatus","title":"tableMappingStatus — plotTableMappingStatus","text":"Creates interactive table mapping_status data","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/plotTableMappingStatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tableMappingStatus — plotTableMappingStatus","text":"","code":"plotTableMappingStatus(mapping_status)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/plotTableMappingStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tableMappingStatus — plotTableMappingStatus","text":"mapping_status output mapOMOPtoCodesFrequencies","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/plotTableMappingStatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tableMappingStatus — plotTableMappingStatus","text":"interactive reactable table","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/plotTableVocabularyStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Table Vocabulary Status — plotTableVocabularyStatus","title":"Plot Table Vocabulary Status — plotTableVocabularyStatus","text":"function plots vocabulary status specific source vocabulary ID.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/plotTableVocabularyStatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Table Vocabulary Status — plotTableVocabularyStatus","text":"","code":"plotTableVocabularyStatus(mapping_status, source_vocabulary_id)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/plotTableVocabularyStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Table Vocabulary Status — plotTableVocabularyStatus","text":"mapping_status mapping status data containing code counts. source_vocabulary_id source vocabulary ID plot status.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/plotTableVocabularyStatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Table Vocabulary Status — plotTableVocabularyStatus","text":"reactive table displaying vocabulary status.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/readUsagiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Usagi File — readUsagiFile","title":"Read Usagi File — readUsagiFile","text":"Reads Usagi mapping file appropriate column type specifications. Warnings missing columns suppressed ADD_INFO columns optional.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/readUsagiFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Usagi File — readUsagiFile","text":"","code":"readUsagiFile(pathToUsagiFile)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/readUsagiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Usagi File — readUsagiFile","text":"pathToUsagiFile Path Usagi mapping file read","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/readUsagiFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Usagi File — readUsagiFile","text":"tibble containing Usagi mapping data appropriate column types","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/readUsagiFile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Usagi File — readUsagiFile","text":"Required columns: sourceCode (character): Source vocabulary code sourceName (character): Description source code sourceFrequency (integer): Frequency occurrence sourceAutoAssignedConceptIds (integer): Auto-assigned concept IDs matchScore (double): Score mapping match mappingStatus (character): Status mapping (APPROVED, UNCHECKED, etc.) equivalence (character): Type equivalence statusSetBy (character): User set status statusSetOn (double): Timestamp status set conceptId (integer): Target concept ID conceptName (character): Name target concept domainId (character): Domain target concept mappingType (character): Type mapping comment (character): Additional comments createdBy (character): User created mapping createdOn (double): Timestamp creation assignedReviewer (character): Assigned reviewer Optional ADD_INFO columns: sourceConceptId (double): Source concept ID sourceConceptClass (character): Class source concept sourceDomain (character): Domain source concept sourceValidStartDate (date): Start date validity sourceValidEndDate (date): End date validity sourceParents (character): Parent concepts sourceParentVocabulary (character): Vocabulary parent concepts validationMessagess (character): Validation messages","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/updateUsagiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Usagi File — updateUsagiFile","title":"Validate Usagi File — updateUsagiFile","text":"Reads usagi file given 'pathToUsagiFile' performs following checks: Default Usagi columns: Check default Usagi columns present: Check sourceCode conceptId unique Check sourceCode empty Check sourceName empty Check sourceName less 255 characters usagi file C&CR columns: Check concept_id 0 APPROVED mappingStatus Check codes mapping one domain mapped compatible domains Check sourceValidStartDate sourceValidEndDate Check ADD_INFO:sourceParents valid concept code ADD_INFO:sourceParentVocabulary","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/updateUsagiFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Usagi File — updateUsagiFile","text":"","code":"updateUsagiFile(   pathToUsagiFile,   connection,   vocabularyDatabaseSchema,   pathToUpdatedUsagiFile,   updateLevelTibble = NULL,   appendOrClearAutoUpdatingInfo = \"append\",   skipValidation = TRUE,   sourceConceptIdOffset = 0 )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/updateUsagiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Usagi File — updateUsagiFile","text":"pathToUsagiFile Path Usagi mapping file validate connection DatabaseConnector connection object vocabularyDatabaseSchema Schema name vocabulary tables stored pathToUpdatedUsagiFile Path save updated Usagi file updateLevelTibble Optional tibble defining relationship update rules. Default rules : \"Maps \" (level 1, review needed) \"Concept replaced \" (level 2, review needed) \"Concept same_as \" (level 3, review needed) \"Concept poss_eq \" (level 4, review needed) appendOrClearAutoUpdatingInfo Whether append (\"append\") clear (\"clear\") auto-updating info skipValidation Whether skip validation checks TRUE. Default FALSE sourceConceptIdOffset Integer offset add source concept IDs. Default 0","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/updateVocabularyFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Vocabulary Folder — updateVocabularyFolder","title":"Update Vocabulary Folder — updateVocabularyFolder","text":"Updates Usagi files vocabulary folder latest concept information. folder must contain vocabularies.csv file describes vocabularies corresponding Usagi files.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/updateVocabularyFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Vocabulary Folder — updateVocabularyFolder","text":"","code":"updateVocabularyFolder(   pathToVocabularyFolder,   connection,   vocabularyDatabaseSchema,   updateResultsFolder,   skipValidation = TRUE )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/updateVocabularyFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Vocabulary Folder — updateVocabularyFolder","text":"pathToVocabularyFolder Path folder containing vocabulary files connection DatabaseConnector connection object vocabularyDatabaseSchema Schema name vocabulary tables stored updateResultsFolder Folder updated files saved skipValidation Whether skip validation checks TRUE. Default TRUE","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/updateVocabularyFolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Vocabulary Folder — updateVocabularyFolder","text":"tibble containing update results files","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCDMtablesWithDQD.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate CDM Tables Using Data Quality Dashboard — validateCDMtablesWithDQD","title":"Validate CDM Tables Using Data Quality Dashboard — validateCDMtablesWithDQD","text":"Validates CDM vocabulary tables using OHDSI Data Quality Dashboard. performs standard CDM vocabulary table checks ensure data quality consistency.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCDMtablesWithDQD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate CDM Tables Using Data Quality Dashboard — validateCDMtablesWithDQD","text":"","code":"validateCDMtablesWithDQD(   connectionDetails,   vocabularyDatabaseSchema,   validationResultsFolder )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCDMtablesWithDQD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate CDM Tables Using Data Quality Dashboard — validateCDMtablesWithDQD","text":"connectionDetails DatabaseConnector connection details object vocabularyDatabaseSchema Schema name vocabulary tables stored validationResultsFolder Folder validation results saved","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCDMtablesWithDQD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate CDM Tables Using Data Quality Dashboard — validateCDMtablesWithDQD","text":"tibble containing validation results","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCodeCountsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Code Counts Folder — validateCodeCountsFile","title":"Validate Code Counts Folder — validateCodeCountsFile","text":"Validates code count files code counts folder set rules. folder must contain vocabularies_coverage.csv file describes vocabularies covered databases_coverage.csv file describes databases covered.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCodeCountsFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Code Counts Folder — validateCodeCountsFile","text":"","code":"validateCodeCountsFile(pathToCodeCountsFile)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCodeCountsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Code Counts Folder — validateCodeCountsFile","text":"pathToCodeCountsFile Path CSV file containing database code counts.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCodeCountsFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Code Counts Folder — validateCodeCountsFile","text":"tibble containing validation results files","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCodeCountsFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Code Counts Folder — validateCodeCountsFolder","title":"Validate Code Counts Folder — validateCodeCountsFolder","text":"Validates code count files code counts folder set rules. folder must contain vocabularies_coverage.csv file describes vocabularies coverage, databases_coverage.csv file describes databases corresponding code count files.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCodeCountsFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Code Counts Folder — validateCodeCountsFolder","text":"","code":"validateCodeCountsFolder(pathToCodeCountsFolder)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCodeCountsFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Code Counts Folder — validateCodeCountsFolder","text":"pathToCodeCountsFolder Path folder containing code count files","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateCodeCountsFolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Code Counts Folder — validateCodeCountsFolder","text":"tibble containing validation results files","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateUsagiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Usagi File — validateUsagiFile","title":"Validate Usagi File — validateUsagiFile","text":"Reads usagi file given 'pathToUsagiFile' performs following checks: Default Usagi columns: Check default Usagi columns present: Check sourceCode conceptId unique Check sourceCode empty Check sourceName empty Check sourceName less 255 characters usagi file C&CR columns: Check concept_id 0 APPROVED mappingStatus Check codes mapping one domain mapped compatible domains Check sourceValidStartDate sourceValidEndDate Check ADD_INFO:sourceParents valid concept code ADD_INFO:sourceParentVocabulary","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateUsagiFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Usagi File — validateUsagiFile","text":"","code":"validateUsagiFile(   pathToUsagiFile,   connection,   vocabularyDatabaseSchema,   pathToValidatedUsagiFile,   sourceConceptIdOffset )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateUsagiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Usagi File — validateUsagiFile","text":"pathToUsagiFile Path Usagi mapping file validate connection DatabaseConnector connection object vocabularyDatabaseSchema Schema name vocabulary tables stored pathToValidatedUsagiFile Path save validated Usagi file sourceConceptIdOffset Integer offset add source concept IDs. Default 0","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateVocabularyFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Vocabulary Folder — validateVocabularyFolder","title":"Validate Vocabulary Folder — validateVocabularyFolder","text":"Validates Usagi files vocabulary folder set rules. folder must contain vocabularies.csv file describes vocabularies corresponding Usagi files.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateVocabularyFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Vocabulary Folder — validateVocabularyFolder","text":"","code":"validateVocabularyFolder(   pathToVocabularyFolder,   connection,   vocabularyDatabaseSchema,   validationResultsFolder )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateVocabularyFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Vocabulary Folder — validateVocabularyFolder","text":"pathToVocabularyFolder Path folder containing vocabulary files connection DatabaseConnector connection object vocabularyDatabaseSchema Schema name vocabulary tables stored validationResultsFolder Folder validation results saved","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/validateVocabularyFolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Vocabulary Folder — validateVocabularyFolder","text":"tibble containing validation results files","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/vocabularyFolderToSTCMVocabularyConcepClassTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload Vocabulary Folder to CDM Tables — vocabularyFolderToSTCMVocabularyConcepClassTables","title":"Upload Vocabulary Folder to CDM Tables — vocabularyFolderToSTCMVocabularyConcepClassTables","text":"Uploads vocabulary files folder CDM tables. includes: Adding vocabularies VOCABULARY table Adding concept classes CONCEPT_CLASS table Adding mappings Source Concept Map table Creating corresponding CONCEPT entries","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/vocabularyFolderToSTCMVocabularyConcepClassTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload Vocabulary Folder to CDM Tables — vocabularyFolderToSTCMVocabularyConcepClassTables","text":"","code":"vocabularyFolderToSTCMVocabularyConcepClassTables(   pathToVocabularyFolder,   connection,   vocabularyDatabaseSchema,   sourceToConceptMapTable,   skipValidation = TRUE,   pathToValidatedUsagiFolder = NULL )"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/vocabularyFolderToSTCMVocabularyConcepClassTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload Vocabulary Folder to CDM Tables — vocabularyFolderToSTCMVocabularyConcepClassTables","text":"pathToVocabularyFolder Path folder containing vocabulary files connection DatabaseConnector connection object vocabularyDatabaseSchema Schema name vocabulary tables stored sourceToConceptMapTable Name source concept map table skipValidation Whether skip validation Usagi files (default: TRUE) pathToValidatedUsagiFolder Path validated Usagi files saved validation performed","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/vocabularyFolderToSTCMVocabularyConcepClassTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload Vocabulary Folder to CDM Tables — vocabularyFolderToSTCMVocabularyConcepClassTables","text":"NULL invisibly. function modifies database tables directly.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/vocabularyFolderToSTCMVocabularyConcepClassTables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload Vocabulary Folder to CDM Tables — vocabularyFolderToSTCMVocabularyConcepClassTables","text":"vocabulary folder must contain: vocabularies.csv: file describing vocabularies columns: source_vocabulary_id source_vocabulary_name source_concept_id_offset path_to_usagi_file path_to_news_file ignore Usagi mapping files referenced vocabularies.csv NEWS files containing version information referenced vocabularies.csv","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/writeUsagiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Usagi mapping file — writeUsagiFile","title":"Write a Usagi mapping file — writeUsagiFile","text":"Write Usagi mapping file disk","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/writeUsagiFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Usagi mapping file — writeUsagiFile","text":"","code":"writeUsagiFile(usagiTibble, pathToUsagiFile)"},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/writeUsagiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Usagi mapping file — writeUsagiFile","text":"usagiTibble tibble containing Usagi mapping data pathToUsagiFile Path Usagi mapping file written","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/writeUsagiFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a Usagi mapping file — writeUsagiFile","text":"None","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/reference/writeUsagiFile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a Usagi mapping file — writeUsagiFile","text":"function writes Usagi mapping file following columns: sourceCode (character): Source code sourceName (character): Source name sourceFrequency (integer): Source frequency sourceAutoAssignedConceptIds (integer): Source auto-assigned concept IDs matchScore (double): Match score mappingStatus (character): Mapping status equivalence (character): Equivalence statusSetBy (character): Status set statusSetOn (double): Status set conceptId (integer): Concept ID conceptName (character): Concept name domainId (character): Domain ID mappingType (character): Mapping type comment (character): Comment createdBy (character): Created createdOn (double): Created assignedReviewer (character): Assigned reviewer ADD_INFO:sourceConceptId (double): Source concept ID ADD_INFO:sourceConceptClass (character): Source concept class ADD_INFO:sourceDomain (character): Source domain ADD_INFO:sourceValidStartDate (date): Source valid start date ADD_INFO:sourceValidEndDate (date): Source valid end date ADD_INFO:sourceParents (character): Source parents ADD_INFO:sourceParentVocabulary (character): Source parent vocabulary ADD_INFO:validationMessages (character): Validation messages ADD_INFO:autoUpdatingInfo (character): Auto updating info","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/news/index.html","id":"romopmappingtools-211","dir":"Changelog","previous_headings":"","what":"ROMOPMappingTools 2.1.1","title":"ROMOPMappingTools 2.1.1","text":"Fixed bug conversion OMOP vocabulary CSVs DuckDB","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/news/index.html","id":"romopmappingtools-210","dir":"Changelog","previous_headings":"","what":"ROMOPMappingTools 2.1.0","title":"ROMOPMappingTools 2.1.0","text":"Fixed concept_ancestor table generation. ICD10fi hierarchy correct, duplicated rows present table. Added DRUG_STRENGTH table generation. missing, created warnings DQD validation. Fixed errors due DatabaseConnector v7.0.0.","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/news/index.html","id":"romopmappingtools-205","dir":"Changelog","previous_headings":"","what":"ROMOPMappingTools 2.0.5","title":"ROMOPMappingTools 2.0.5","text":"STCDM CDM table conversion SQL flipped Subsumes relationships Added self-reference concepts SQL converts concept_relationship concept_ancestor Updated test-databasesFromAndToCSV.R ignore warnings DQD validation","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/news/index.html","id":"romopmappingtools-204","dir":"Changelog","previous_headings":"","what":"ROMOPMappingTools 2.0.4","title":"ROMOPMappingTools 2.0.4","text":"Added missing domainId combinations usagi file validation","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/news/index.html","id":"romopmappingtools-203","dir":"Changelog","previous_headings":"","what":"ROMOPMappingTools 2.0.3","title":"ROMOPMappingTools 2.0.3","text":"Added download button vocabulary database status tables Force ADD_INFO:validationMessages ADD_INFO:autoUpdatingInfo NA empty","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/news/index.html","id":"romopmappingtools-202","dir":"Changelog","previous_headings":"","what":"ROMOPMappingTools 2.0.2","title":"ROMOPMappingTools 2.0.2","text":"Fix updating reporting","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/news/index.html","id":"romopmappingtools-v201","dir":"Changelog","previous_headings":"","what":"ROMOPMappingTools v2.0.1","title":"ROMOPMappingTools v2.0.1","text":"Refactored Dashboard build process","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/news/index.html","id":"romopmappingtools-v200","dir":"Changelog","previous_headings":"","what":"ROMOPMappingTools v2.0.0","title":"ROMOPMappingTools v2.0.0","text":"Code refactoring Code simplified working duckdb database Added new functionality update Usagi files vocabulary update","code":""},{"path":"https://finomop.github.io/ROMOPMappingTools/news/index.html","id":"romopmappingtools-v100","dir":"Changelog","previous_headings":"","what":"ROMOPMappingTools v1.0.0","title":"ROMOPMappingTools v1.0.0","text":"Initial release","code":""}]
